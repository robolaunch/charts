apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: devspaces.dev.roboscale.io
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "devspace-operator.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.9.2
  labels:
  {{- include "devspace-operator.labels" . | nindent 4 }}
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "devspace-operator.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: dev.roboscale.io
  names:
    kind: DevSpace
    listKind: DevSpaceList
    plural: devspaces
    singular: devspace
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.environment.domain
      name: Domain
      type: string
    - jsonPath: .spec.environment.application.name
      name: App
      type: string
    - jsonPath: .spec.environment.application.version
      name: Version
      type: string
    - jsonPath: .spec.environment.devspace.ubuntuDistro
      name: Ubuntu
      type: string
    - jsonPath: .spec.environment.devspace.desktop
      name: Desktop
      type: string
    - jsonPath: .spec.environment.devspace.version
      name: DevSpace
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DevSpace is the custom resource that contains ROS 2 components
          (Workloads, Cloud VDI, Cloud IDE, ROS Bridge, Configurational Resources),
          robolaunch DevSpace instances can be decomposed and distributed to both cloud
          instances and physical instances using federation.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of the DevSpace.
            properties:
              devSuiteTemplate:
                description: DevSpace development suite template
                properties:
                  devSpaceIDETemplate:
                    description: Configurational parameters of DevSpaceIDE. Applied
                      if `.spec.ideEnabled` is set to `true`.
                    properties:
                      display:
                        description: Cloud IDE connects an X11 socket if it's set to
                          `true` and a target DevSpaceVDI resource is set in labels
                          with key `robolaunch.io/target-vdi`. Applications that requires
                          GUI can be executed such as rViz.
                        type: boolean
                      ingress:
                        description: '[*alpha*] DevSpaceIDE will create an Ingress resource
                          if `true`.'
                        type: boolean
                      privileged:
                        description: If `true`, containers of DevSpaceIDE will be privileged
                          containers. It can be used in physical instances where it's
                          necessary to access I/O devices on the host machine. Not recommended
                          to activate this field on cloud instances.
                        type: boolean
                      resources:
                        description: Resource limitations of Cloud IDE.
                        properties:
                          cpu:
                            description: CPU resource limit.
                            pattern: ^([0-9])+(m)$
                            type: string
                          gpuCore:
                            description: GPU core number that will be allocated.
                            type: integer
                          memory:
                            description: Memory resource limit.
                            pattern: ^([0-9])+(Mi|Gi)$
                            type: string
                        type: object
                      serviceType:
                        default: NodePort
                        description: Service type of Cloud IDE. `ClusterIP` and `NodePort`
                          is supported.
                        enum:
                        - ClusterIP
                        - NodePort
                        type: string
                    type: object
                  devSpaceVDITemplate:
                    description: Configurational parameters of DevSpaceVDI. Applied
                      if `.spec.vdiEnabled` is set to `true`.
                    properties:
                      ingress:
                        description: '[*alpha*] DevSpaceIDE will create an Ingress resource
                          if `true`.'
                        type: boolean
                      nat1to1:
                        description: NAT1TO1 option for Cloud VDI.
                        type: string
                      privileged:
                        description: If `true`, containers of DevSpaceIDE will be privileged
                          containers. It can be used in physical instances where it's
                          necessary to access I/O devices on the host machine. Not recommended
                          to activate this field on cloud instances.
                        type: boolean
                      resolution:
                        default: 2048x1152
                        description: VDI screen resolution options. Default is `2048x1152`.
                        enum:
                        - 2048x1152
                        - 1920x1080
                        - 1600x1200
                        type: string
                      resources:
                        description: Resource limitations of Cloud IDE.
                        properties:
                          cpu:
                            description: CPU resource limit.
                            pattern: ^([0-9])+(m)$
                            type: string
                          gpuCore:
                            description: GPU core number that will be allocated.
                            type: integer
                          memory:
                            description: Memory resource limit.
                            pattern: ^([0-9])+(Mi|Gi)$
                            type: string
                        type: object
                      serviceType:
                        default: NodePort
                        description: Service type of Cloud IDE. `ClusterIP` and `NodePort`
                          is supported.
                        enum:
                        - ClusterIP
                        - NodePort
                        type: string
                      webrtcPortRange:
                        description: UDP port range to used in WebRTC connections.
                        pattern: ^([0-9])+-([0-9])+$
                        type: string
                    type: object
                  ideEnabled:
                    description: If `true`, a Cloud IDE will be provisioned inside development
                      suite.
                    type: boolean
                  vdiEnabled:
                    description: If `true`, a Cloud VDI will be provisioned inside development
                      suite.
                    type: boolean
                type: object
              development:
                description: '[*alpha*] Switch to development mode if `true`.'
                type: boolean
              environment:
                description: Environment properties. Supported options are listed in
                  [robolaunch Platform Versioning Map](https://github.com/robolaunch/robolaunch/blob/main/platform.yaml).
                properties:
                  application:
                    description: Application properties.
                    properties:
                      name:
                        description: Application name.
                        type: string
                      version:
                        description: Version of the application.
                        type: string
                    required:
                    - name
                    - version
                    type: object
                  devspace:
                    description: DevSpace image properties.
                    properties:
                      desktop:
                        description: Ubuntu desktop.
                        type: string
                      ubuntuDistro:
                        description: Ubuntu distribution of the environment.
                        type: string
                      version:
                        description: DevSpace image version.
                        type: string
                    required:
                    - desktop
                    - ubuntuDistro
                    - version
                    type: object
                  domain:
                    description: Domain of the environment.
                    type: string
                required:
                - application
                - devspace
                - domain
                type: object
              rootDNSConfig:
                description: '[*alpha*] Root DNS configuration.'
                properties:
                  host:
                    description: '[*alpha*] Root DNS name..'
                    type: string
                required:
                - host
                type: object
              storage:
                description: Total storage amount to persist via DevSpace. Unit of measurement
                  is MB. (eg. `10240` corresponds 10 GB) This amount is being shared
                  between different components.
                properties:
                  amount:
                    default: 10000
                    description: Specifies how much storage will be allocated in total.
                      Use MB as a unit of measurement. (eg. `10240` is equal to 10 GB)
                    type: integer
                  storageClassConfig:
                    description: Storage class selection for devspace's volumes.
                    properties:
                      accessMode:
                        description: PVC access modes. Currently, only `ReadWriteOnce`
                          is supported.
                        type: string
                      name:
                        description: Storage class name.
                        type: string
                    type: object
                type: object
              tlsSecretRef:
                description: '[*alpha*] TLS secret reference.'
                properties:
                  name:
                    description: '[*alpha*] TLS secret object name.'
                    type: string
                  namespace:
                    description: '[*alpha*] TLS secret object namespace.'
                    type: string
                required:
                - name
                - namespace
                type: object
              workspaceManagerTemplate:
                description: Workspace manager template to configure ROS 2 workspaces.
                properties:
                  updateNeeded:
                    description: WorkspaceManager is triggered if this field is set
                      to `true`. Then the workspaces are being configured again while
                      backing up the old configurations. This field is often used by
                      operator.
                    type: boolean
                  workspaces:
                    description: Workspace definitions of devspace. Multiple ROS 2 workspaces
                      can be configured over this field.
                    items:
                      description: Workspace description. Each devspace should contain
                        at least one workspace. A workspace should contain at least
                        one repository in it.
                      properties:
                        name:
                          description: Name of workspace. If a workspace's name is `my_ws`,
                            it's absolute path is `/home/workspaces/my_ws`.
                          type: string
                        repositories:
                          additionalProperties:
                            description: Repository description.
                            properties:
                              branch:
                                description: Branch of the repository to clone.
                                type: string
                              hash:
                                description: '[*Autofilled*] Hash of last commit'
                                type: string
                              owner:
                                description: '[*Autofilled*] User or organization, maintainer
                                  of repository'
                                type: string
                              path:
                                description: '[*Autofilled*] Absolute path of repository'
                                type: string
                              repo:
                                description: '[*Autofilled*] Repository name'
                                type: string
                              url:
                                description: Base URL of the repository.
                                type: string
                            required:
                            - branch
                            - url
                            type: object
                          description: Repositories to clone inside workspace's `src`
                            directory.
                          type: object
                      required:
                      - name
                      - repositories
                      type: object
                    minItems: 1
                    type: array
                  workspacesPath:
                    description: Global path of workspaces. It's fixed to `/root/workspaces`
                      path.
                    type: string
                type: object
            required:
            - environment
            type: object
          status:
            description: Most recently observed status of the DevSpace.
            properties:
              attachedDevObjects:
                description: '[*alpha*] Attached dev object information.'
                items:
                  properties:
                    reference:
                      description: Reference to the DevSuite instance.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within
                            a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]"
                            (container with index 2 in this pod). This syntax is chosen
                            only to have some well-defined way of referencing a part
                            of an object. TODO: this design is not final and this field
                            is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    status:
                      description: Status of attached DevSuite.
                      properties:
                        active:
                          description: '[*alpha*] Indicates if DevSuite is attached
                            to a DevSpace and actively provisioned it''s resources.'
                          type: boolean
                        devSpaceIDEStatus:
                          description: Status of DevSpaceIDE.
                          properties:
                            connection:
                              description: Address of the devspace service that can
                                be reached from outside.
                              type: string
                            resource:
                              description: Generic status for any owned resource.
                              properties:
                                created:
                                  description: Shows if the owned resource is created.
                                  type: boolean
                                phase:
                                  description: Phase of the owned resource.
                                  type: string
                                reference:
                                  description: Reference to the owned resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object
                                        instead of an entire object, this string should
                                        contain a valid JSON/Go field access statement,
                                        such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a
                                        container within a pod, this would take on a
                                        value like: "spec.containers{name}" (where "name"
                                        refers to the name of the container that triggered
                                        the event) or if no container name is specified
                                        "spec.containers[2]" (container with index 2
                                        in this pod). This syntax is chosen only to
                                        have some well-defined way of referencing a
                                        part of an object. TODO: this design is not
                                        final and this field is subject to change in
                                        the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which
                                        this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - created
                              type: object
                          type: object
                        devSpaceVDIStatus:
                          description: Status of DevSpaceVDI.
                          properties:
                            connection:
                              description: Address of the devspace service that can
                                be reached from outside.
                              type: string
                            resource:
                              description: Generic status for any owned resource.
                              properties:
                                created:
                                  description: Shows if the owned resource is created.
                                  type: boolean
                                phase:
                                  description: Phase of the owned resource.
                                  type: string
                                reference:
                                  description: Reference to the owned resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object
                                        instead of an entire object, this string should
                                        contain a valid JSON/Go field access statement,
                                        such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a
                                        container within a pod, this would take on a
                                        value like: "spec.containers{name}" (where "name"
                                        refers to the name of the container that triggered
                                        the event) or if no container name is specified
                                        "spec.containers[2]" (container with index 2
                                        in this pod). This syntax is chosen only to
                                        have some well-defined way of referencing a
                                        part of an object. TODO: this design is not
                                        final and this field is subject to change in
                                        the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which
                                        this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - created
                              type: object
                          type: object
                        phase:
                          description: Phase of DevSuite.
                          type: string
                      type: object
                  type: object
                type: array
              devSuiteStatus:
                description: DevSpace development suite instance status.
                properties:
                  resource:
                    description: Generic status for any owned resource.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                  status:
                    description: Status of the DevSuite instance.
                    properties:
                      active:
                        description: '[*alpha*] Indicates if DevSuite is attached to
                          a DevSpace and actively provisioned it''s resources.'
                        type: boolean
                      devSpaceIDEStatus:
                        description: Status of DevSpaceIDE.
                        properties:
                          connection:
                            description: Address of the devspace service that can be
                              reached from outside.
                            type: string
                          resource:
                            description: Generic status for any owned resource.
                            properties:
                              created:
                                description: Shows if the owned resource is created.
                                type: boolean
                              phase:
                                description: Phase of the owned resource.
                                type: string
                              reference:
                                description: Reference to the owned resource.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object
                                      instead of an entire object, this string should
                                      contain a valid JSON/Go field access statement,
                                      such as desiredState.manifest.containers[2]. For
                                      example, if the object reference is to a container
                                      within a pod, this would take on a value like:
                                      "spec.containers{name}" (where "name" refers to
                                      the name of the container that triggered the event)
                                      or if no container name is specified "spec.containers[2]"
                                      (container with index 2 in this pod). This syntax
                                      is chosen only to have some well-defined way of
                                      referencing a part of an object. TODO: this design
                                      is not final and this field is subject to change
                                      in the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which
                                      this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - created
                            type: object
                        type: object
                      devSpaceVDIStatus:
                        description: Status of DevSpaceVDI.
                        properties:
                          connection:
                            description: Address of the devspace service that can be
                              reached from outside.
                            type: string
                          resource:
                            description: Generic status for any owned resource.
                            properties:
                              created:
                                description: Shows if the owned resource is created.
                                type: boolean
                              phase:
                                description: Phase of the owned resource.
                                type: string
                              reference:
                                description: Reference to the owned resource.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object
                                      instead of an entire object, this string should
                                      contain a valid JSON/Go field access statement,
                                      such as desiredState.manifest.containers[2]. For
                                      example, if the object reference is to a container
                                      within a pod, this would take on a value like:
                                      "spec.containers{name}" (where "name" refers to
                                      the name of the container that triggered the event)
                                      or if no container name is specified "spec.containers[2]"
                                      (container with index 2 in this pod). This syntax
                                      is chosen only to have some well-defined way of
                                      referencing a part of an object. TODO: this design
                                      is not final and this field is subject to change
                                      in the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which
                                      this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - created
                            type: object
                        type: object
                      phase:
                        description: Phase of DevSuite.
                        type: string
                    type: object
                type: object
              image:
                description: Main image of DevSpace. It is derived either from the specifications
                  or determined directly over labels.
                type: string
              loaderJobStatus:
                description: Status of loader job that configures environment.
                properties:
                  created:
                    description: Shows if the owned resource is created.
                    type: boolean
                  phase:
                    description: Phase of the owned resource.
                    type: string
                  reference:
                    description: Reference to the owned resource.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead of
                          an entire object, this string should contain a valid JSON/Go
                          field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part of
                          an object. TODO: this design is not final and this field is
                          subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - created
                type: object
              nodeName:
                description: Node that DevSpace uses. It is selected via tenancy labels.
                type: string
              phase:
                description: Phase of DevSpace. It sums the general status of DevSpace.
                type: string
              volumeStatuses:
                description: DevSpace persists some of the directories of underlying
                  OS inside persistent volumes. This field exposes persistent volume
                  claims that dynamically provision PVs.
                properties:
                  etcDir:
                    description: Holds PVC status of the `/etc` directory of underlying
                      OS.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                  optDir:
                    description: Holds PVC status of the `/opt` directory of underlying
                      OS.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                  usrDir:
                    description: Holds PVC status of the `/usr` directory of underlying
                      OS.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                  varDir:
                    description: Holds PVC status of the `/var` directory of underlying
                      OS.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                  workspaceDir:
                    description: Holds PVC status of the workspaces directory of underlying
                      OS.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                type: object
              workspaceManagerStatus:
                description: Workspace manager instance status if exists.
                properties:
                  resource:
                    description: Generic status for any owned resource.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in the
                              future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                  status:
                    description: Status of the WorkspaceManager instance.
                    properties:
                      cleanupJobStatus:
                        description: Status of cleanup jobs that runs while reconfiguring
                          workspaces.
                        properties:
                          created:
                            description: Shows if the owned resource is created.
                            type: boolean
                          phase:
                            description: Phase of the owned resource.
                            type: string
                          reference:
                            description: Reference to the owned resource.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object. TODO: this design is not final and this
                                  field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - created
                        type: object
                      clonerJobStatus:
                        description: Status of cloner job.
                        properties:
                          created:
                            description: Shows if the owned resource is created.
                            type: boolean
                          phase:
                            description: Phase of the owned resource.
                            type: string
                          reference:
                            description: Reference to the owned resource.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object. TODO: this design is not final and this
                                  field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - created
                        type: object
                      phase:
                        description: Phase of WorkspaceManager.
                        type: string
                      version:
                        description: Incremental version of workspace configuration
                          map. Used to determine changes in configuration.
                        type: integer
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []